{"version":3,"file":"static/js/606.34e551aa.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx","../node_modules/@mui/icons-material/CheckOutlined.js","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/icons-material/RemoveRedEyeOutlined.js","../node_modules/@mui/icons-material/VisibilityOffOutlined.js"],"sourcesContent":["import { Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const RegisterFormEl = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 1.36;\n  color: ${({ theme }) => theme.colors.black};\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 24px;\n    line-height: 1.38;\n  }\n`;\n\nexport const RegisterFormUsernameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormUsernameInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormEmailContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormEmailInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  padding: 12px 0;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  width: 100%;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n\nexport const ErrorIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const RegisterFormPasswordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error, secure }) => (error || secure ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error, secure }) => (error || secure ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormPasswordInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blue};\n  border-radius: 40px;\n`;\n\nexport const PasswordIcon = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const EyeIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blue};\n  }\n`;\n\nexport const CheckMarkIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.green};\n  }\n`;\n\nexport const InfoMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.colors.green};\n`;\n\nexport const RegisterErrorMessage = styled.div`\n  padding: 15px 16px 0 16px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const RegisterBtn = styled.button`\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n\n  padding: 10px 0 10px 0;\n\n  border-radius: 40px;\n\n  color: ${({ theme }) => theme.colors.blue};\n  background: #fff;\n  border: 1px solid #54adff;\n\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n\n  transition: all 350ms ease-in;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 41px;\n    margin-bottom: 24px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background: ${({ theme }) => theme.colors.blue};\n    border: 1px solid transparent;\n  }\n`;\n\nexport const LoginText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: 0.04em;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const LoginLink = styled(Link)`\n  text-decoration-line: underline;\n  color: ${({ theme }) => theme.colors.blue};\n  display: inline;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { register, login } from 'redux/Auth/AuthOperations';\n\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\n\nimport {\n  RegisterFormEl,\n  RegisterFormTitle,\n  RegisterFormUsernameContainer,\n  RegisterFormUsernameInputContainer,\n  RegisterFormEmailContainer,\n  RegisterFormEmailInputContainer,\n  RegisterFormInput,\n  RegisterFormPasswordContainer,\n  RegisterFormPasswordInputContainer,\n  ErrorMessage,\n  PasswordIcon,\n  RegisterBtn,\n  EyeIcon,\n  ErrorIcon,\n  CheckMarkIcon,\n  InfoMessage,\n  RegisterErrorMessage,\n  LoginText,\n  LoginLink,\n} from './RegisterForm.styled';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst fieldValidation = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = 'This field is required';\n  } else if (/^\\s+$/.test(values.username)) {\n    errors.username = 'Username cannot be empty';\n  }\n\n  if (!values.email) {\n    errors.email = 'This field is required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Enter a valid Email';\n  }\n\n  if (!values.password) {\n    errors.password = 'This field is required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be at least 8 characters long';\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'This field is required';\n  } else if (values.confirmPassword.length < 8) {\n    errors.confirmPassword = 'Password must be at least 8 characters long';\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords do not match';\n  }\n\n  return errors;\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [emailAvailable, setEmailAvailable] = useState(true);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setShowConfirmPassword(prevState => !prevState);\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (loading) {\n      return;\n    }\n    localStorage.setItem('isNewRegistration', 'true');\n    setLoading(true);\n    const credentials = {\n      email: values.email,\n      password: values.password,\n      name: values.username,\n    };\n\n    try {\n      const response = await dispatch(register(credentials));\n      if (response.error) {\n        setEmailAvailable(false);\n      } else {\n        setEmailAvailable(true);\n        await dispatch(\n          login({ email: values.email, password: values.password })\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={fieldValidation}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        setErrors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        resetForm,\n      }) => {\n        const isPasswordValid = values.password && values.password.length >= 8;\n        const handleFieldChange = e => {\n          const { name } = e.target;\n          setErrors({ ...errors, [name]: '' });\n          handleChange(e);\n        };\n\n        return (\n          <RegisterFormEl onSubmit={handleSubmit}>\n            <RegisterFormTitle>Registration</RegisterFormTitle>\n            <RegisterFormUsernameContainer\n              error={errors.username && touched.username}\n            >\n              <RegisterFormUsernameInputContainer\n                error={errors.username && touched.username}\n                style={{\n                  borderColor:\n                    errors.username && touched.username ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  value={values.username}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.username && touched.username && values.username && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, username: '' } });\n                    }}\n                  >\n                    <CloseOutlinedIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormUsernameInputContainer>\n              {errors.username && touched.username && (\n                <ErrorMessage name=\"username\">{errors.username}</ErrorMessage>\n              )}\n            </RegisterFormUsernameContainer>\n\n            <RegisterFormEmailContainer error={errors.email && touched.email}>\n              <RegisterFormEmailInputContainer\n                error={errors.email && touched.email}\n                style={{\n                  borderColor:\n                    errors.email && touched.email ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={values.email}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.email && touched.email && values.email && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, email: '' } });\n                    }}\n                  >\n                    <CloseOutlinedIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormEmailInputContainer>\n\n              {errors.email && touched.email && (\n                <ErrorMessage name=\"email\">{errors.email}</ErrorMessage>\n              )}\n            </RegisterFormEmailContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.password && touched.password}\n              secure={isPasswordValid}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.password && touched.password}\n                secure={isPasswordValid}\n                style={{\n                  borderColor:\n                    errors.password && touched.password\n                      ? '#F43F5E'\n                      : isPasswordValid\n                      ? '#00C3AD'\n                      : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={togglePasswordVisibility}\n                    error={errors.password && touched.password}\n                    secure={isPasswordValid}\n                  >\n                    {showPassword ? (\n                      <RemoveRedEyeOutlinedIcon />\n                    ) : (\n                      <VisibilityOffOutlinedIcon />\n                    )}\n                  </EyeIcon>\n                  {isPasswordValid && (\n                    <CheckMarkIcon>\n                      <CheckOutlinedIcon />\n                    </CheckMarkIcon>\n                  )}\n                  {errors.password && touched.password && values.password && (\n                    <ErrorIcon\n                      onClick={() => {\n                        resetForm({ values: { ...values, password: '' } });\n                      }}\n                    >\n                      <CloseOutlinedIcon />\n                    </ErrorIcon>\n                  )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.password && touched.password && (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              )}\n              {isPasswordValid && (\n                <InfoMessage valid={isPasswordValid}>\n                  Password is secure\n                </InfoMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.confirmPassword && touched.confirmPassword}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.confirmPassword && touched.confirmPassword}\n                style={{\n                  borderColor:\n                    errors.confirmPassword && touched.confirmPassword\n                      ? '#F43F5E'\n                      : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  value={values.confirmPassword}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={toggleConfirmPasswordVisibility}\n                    error={errors.confirmPassword && touched.confirmPassword}\n                  >\n                    {showConfirmPassword ? (\n                      <RemoveRedEyeOutlinedIcon />\n                    ) : (\n                      <VisibilityOffOutlinedIcon />\n                    )}\n                  </EyeIcon>\n                  {errors.confirmPassword &&\n                    touched.confirmPassword &&\n                    values.confirmPassword && (\n                      <ErrorIcon\n                        onClick={() => {\n                          resetForm({\n                            values: { ...values, confirmPassword: '' },\n                          });\n                        }}\n                      >\n                        <CloseOutlinedIcon />\n                      </ErrorIcon>\n                    )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.confirmPassword && touched.confirmPassword && (\n                <ErrorMessage>{errors.confirmPassword}</ErrorMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            {!emailAvailable && (\n              <RegisterErrorMessage>\n                This email is already in use. Please, try with another email or\n                log in!\n              </RegisterErrorMessage>\n            )}\n\n            <RegisterBtn type=\"submit\" disabled={isSubmitting}>\n              Registration\n            </RegisterBtn>\n            <LoginText>\n              Already have an account?\n              <LoginLink to={'/login'}>Log In</LoginLink>\n            </LoginText>\n          </RegisterFormEl>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import styled from '@emotion/styled';\n\nexport const RegisterPageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 80px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  \n\n  @media screen and (max-width: 767px) {\n    padding-top: 44px;\n   \n    }\n  }\n`;\n\nexport const RegisterFormWrapper = styled.div`\n  padding: 60px 75px;\n  width: 608px;\n  height: fit-content;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n    padding: 40px 12px;\n    max-width: 280px;\n\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 20px;\n  }\n`;\n","import { useEffect } from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport {\n  RegisterPageWrapper,\n  RegisterFormWrapper,\n} from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  useEffect(() => {\n    document.body.classList.add('no-scroll');\n\n    return () => document.body.classList.remove('no-scroll');\n  }, []);\n\n  return (\n    <RegisterPageWrapper>\n      <RegisterFormWrapper>\n        <RegisterForm />\n      </RegisterFormWrapper>\n    </RegisterPageWrapper>\n  );\n};\n\nexport default RegisterPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'CheckOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'CloseOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6.5c3.79 0 7.17 2.13 8.82 5.5-1.65 3.37-5.02 5.5-8.82 5.5S4.83 15.37 3.18 12C4.83 8.63 8.21 6.5 12 6.5m0-2C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5m0 5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5-2.5-1.12-2.5-2.5 1.12-2.5 2.5-2.5m0-2c-2.48 0-4.5 2.02-4.5 4.5s2.02 4.5 4.5 4.5 4.5-2.02 4.5-4.5-2.02-4.5-4.5-4.5\"\n}), 'RemoveRedEyeOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6m-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14M2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45zm7.5 7.5 2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13m-3.4-3.4 1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53\"\n}), 'VisibilityOffOutlined');"],"names":["RegisterFormEl","styled","_templateObject","_taggedTemplateLiteral","RegisterFormTitle","_templateObject2","_ref","theme","colors","black","RegisterFormUsernameContainer","_templateObject3","_ref2","error","_ref3","RegisterFormUsernameInputContainer","_templateObject4","_ref4","red","blue","RegisterFormEmailContainer","_templateObject5","_ref5","_ref6","RegisterFormEmailInputContainer","_templateObject6","_ref7","RegisterFormInput","Field","_templateObject7","ErrorIcon","_templateObject8","_ref8","ErrorMessage","_templateObject9","_ref9","RegisterFormPasswordContainer","_templateObject10","_ref10","secure","_ref11","RegisterFormPasswordInputContainer","_templateObject11","_ref12","green","PasswordIcon","_templateObject12","EyeIcon","_templateObject13","_ref13","CheckMarkIcon","_templateObject14","_ref14","InfoMessage","_templateObject15","_ref15","RegisterErrorMessage","_templateObject16","_ref16","RegisterBtn","_templateObject17","_ref17","_ref18","LoginText","_templateObject18","_ref19","grey","LoginLink","Link","_templateObject19","_ref20","initialValues","username","email","password","confirmPassword","fieldValidation","values","errors","test","length","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","emailAvailable","setEmailAvailable","togglePasswordVisibility","prevState","toggleConfirmPasswordVisibility","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","setSubmitting","credentials","_context","prev","next","resetForm","abrupt","localStorage","setItem","name","register","sent","login","t0","console","finish","stop","_x","_x2","apply","arguments","_jsx","Formik","validate","validateOnChange","onSubmit","children","setErrors","touched","handleChange","handleBlur","isSubmitting","isPasswordValid","handleFieldChange","e","target","_objectSpread","_defineProperty","_jsxs","style","borderColor","type","placeholder","value","onChange","onBlur","disabled","onClick","CloseOutlinedIcon","RemoveRedEyeOutlinedIcon","VisibilityOffOutlinedIcon","CheckOutlinedIcon","valid","to","RegisterPageWrapper","RegisterFormWrapper","useEffect","document","body","classList","add","remove","RegisterForm","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}